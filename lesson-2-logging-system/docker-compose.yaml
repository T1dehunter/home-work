version: "3.8"


volumes:
  prometheus_data: {}


services:
  nginx:
    restart: always
    build:
      context: ./nginx
    env_file:
      - .env
    ports:
      - ${WEB_PORT}:${WEB_PORT}


  backend:
    build:
      context: ./backend
    env_file:
      - .env
    ports:
      -  ${BACKEND_PORT}:${BACKEND_PORT}


  mongo:
    build:
      context: ./mongodb
    env_file:
      - .env
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=localhost
      - MONGODB_PORT_NUMBER=MONGODB_PORT


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.3
#    build:
#      context: ./elasticsearch
    volumes:
#      - /path/to/elasticsearch.yml:/opt/bitnami/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/data:/bitnami/elasticsearch/data
    env_file:
      - .env
    expose:
      - "9200"
    ports:
      - "9200:9200"
      - "9300:9300"
#      - ${ELASTICSEARCH_NODE_PORT}:${ELASTICSEARCH_PORT}
    networks:
      - backend


  influxdb:
    build: ./influxdb
    container_name: influxdb
    ports:
      - ${INFLUXDB_PORT}:${INFLUXDB_PORT}
    volumes:
      - /var/lib/influxdb:/var/lib/influxdb
    restart: always
    env_file:
      - .env
    networks:
      - backend
      - frontend


  telegraf:
    build: ./telegraf
    container_name: telegraf
    links:
      - influxdb
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/hostfs/proc
    privileged: true
    restart: always
    env_file:
      - .env
    depends_on:
     - influxdb
    networks:
      - backend


  prometheus:
    image: prom/prometheus:latest
    links:
      - backend
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    env_file:
          - .env
    ports:
      -  ${PROMETHEUS_PORT}:${PROMETHEUS_PORT}


  grafana:
    build: ./grafana
    container_name: grafana
    ports:
      - ${GRAFANA_OUTER_PORT}:${GRAFANA_PORT}
    links:
      - influxdb
      - backend
    volumes:
      - /var/lib/grafana
      - /var/log/grafana
      - /var/lib/grafana/plugins
    restart: always
    env_file:
      - .env
    networks:
      - backend
      - frontend


networks:
  backend:
  frontend: